---
import type { TimelineItem } from "../types/portfolio";

interface Props {
  items: TimelineItem[];
  title?: string;
}

const { items = [], title = "Formación" } = Astro.props;

const toYear = (v?: string) => parseInt((v ?? "").replace(/\D/g, "")) || -Infinity;
const list = [...items].sort((a, b) => toYear(a.start) - toYear(b.start));
const sectionId = `timeline-${(title ?? 'seccion').toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9\-]/g, '')}`;
---

<section id={sectionId} class="timeline" aria-labelledby={`${sectionId}-title`}>
  <header class="timeline__header">
    <p class="timeline__eyebrow">Trayectoria</p>
    <h2 id={`${sectionId}-title`} class="timeline__title">{title}</h2>
    <p class="timeline__lead">Experiencias ordenadas cronológicamente, con foco en accesibilidad y desarrollo multiplataforma.</p>
  </header>

  <ol class="timeline__list">
    {list.map((item) => {
      const hasRange = item.end && item.end !== item.start;
      const timelineLabel = hasRange ? `${item.start} – ${item.end}` : item.start;

      return (
        <li class="timeline__item">
          <article class="timeline-card" aria-label={`${item.title} (${timelineLabel})`}>
            <header class="timeline-card__header">
              <span class="timeline-card__dot" aria-hidden="true"></span>
              <div>
                <p class="timeline-card__dates">
                  <time datetime={item.start}>{item.start}</time>
                  {hasRange && (
                    <>
                      <span aria-hidden="true">—</span>
                      <time datetime={item.end}>{item.end}</time>
                    </>
                  )}
                </p>
                <h3 class="timeline-card__title">{item.title}</h3>
              </div>
            </header>

            <p class="timeline-card__org">
              {item.link ? (
                <a href={item.link} target="_blank" rel="noopener noreferrer" class="timeline-card__link">
                  {item.center}
                </a>
              ) : (
                item.center
              )}
              {item.location && <span class="timeline-card__loc"> · {item.location}</span>}
            </p>

            {item.description && <p class="timeline-card__description">{item.description}</p>}

            {item.tags?.length && (
              <ul class="timeline-card__tags" aria-label="Tecnologías">
                {item.tags.map((tag) => <li>{tag}</li>)}
              </ul>
            )}
          </article>
        </li>
      );
    })}
  </ol>
</section>

<style>
  .timeline {
    display: grid;
    gap: clamp(2.4rem, 4.5vw, 3.6rem);
  }

  .timeline__header {
    text-align: center;
    display: grid;
    gap: 0.75rem;
    max-width: 44rem;
    margin: 0 auto;
  }

  .timeline__eyebrow {
    margin: 0;
    font-size: 0.75rem;
    letter-spacing: 0.24em;
    text-transform: uppercase;
    color: rgba(203, 213, 225, 0.6);
  }

  .timeline__title {
    margin: 0;
    font-size: clamp(2rem, 3.2vw, 2.6rem);
    color: rgba(236, 242, 255, 0.95);
  }

  .timeline__lead {
    margin: 0;
    color: rgba(203, 213, 225, 0.78);
    font-size: clamp(0.95rem, 1.2vw, 1.08rem);
  }

  .timeline__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: clamp(1.6rem, 2.8vw, 2.4rem);
    position: relative;
    max-width: 100%;
  }

  .timeline__list::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0.8rem;
    width: 2px;
    background: rgba(148, 163, 184, 0.22);
    border-radius: 999px;
  }

  .timeline__item {
    position: relative;
    padding-left: 2.5rem;
  }

  .timeline-card {
    background: var(--surface-1);
    border: 1px solid rgba(148, 163, 184, 0.18);
    border-radius: var(--radius-md);
    padding: clamp(1.3rem, 2.1vw, 1.8rem);
    display: grid;
    gap: 0.85rem;
    box-shadow: 0 12px 28px rgba(6, 12, 24, 0.35);
  }

  .timeline-card__header {
    display: flex;
    gap: 0.9rem;
    align-items: center;
  }

  .timeline-card__dot {
    width: 0.85rem;
    height: 0.85rem;
    border-radius: 50%;
    background: var(--accent);
    box-shadow: 0 0 8px rgba(124, 140, 255, 0.4);
    position: relative;
  }

  .timeline-card__dates {
    margin: 0;
    display: inline-flex;
    gap: 0.4rem;
    align-items: center;
    font-size: 0.84rem;
    color: rgba(203, 213, 225, 0.78);
  }

  .timeline-card__dates span { color: rgba(148, 163, 184, 0.55); }

  .timeline-card__title {
    margin: 0;
    font-size: clamp(1.08rem, 1.5vw, 1.3rem);
    color: rgba(236, 242, 255, 0.94);
  }

  .timeline-card__org {
    margin: 0;
    color: rgba(203, 213, 225, 0.82);
  }

  .timeline-card__link {
    color: inherit;
    text-decoration: underline;
    text-decoration-color: rgba(124, 108, 255, 0.4);
    text-decoration-thickness: 2px;
    text-underline-offset: 0.2em;
  }

  .timeline-card__link:hover {
    color: var(--text-0);
    text-decoration-color: rgba(124, 108, 255, 0.8);
  }

  .timeline-card__loc {
    color: rgba(148, 163, 184, 0.6);
  }

  .timeline-card__description {
    margin: 0;
    color: rgba(209, 213, 233, 0.86);
    line-height: 1.65;
  }

  .timeline-card__tags {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .timeline-card__tags li {
    padding: 0.35rem 0.75rem;
    border-radius: var(--radius-pill);
    font-size: 0.78rem;
    background: rgba(17, 25, 46, 0.65);
    border: 1px solid rgba(126, 134, 173, 0.3);
    color: rgba(226, 232, 240, 0.85);
  }

  @media (max-width: 640px) {
    .timeline__list::before {
      left: 0.6rem;
    }

    .timeline__item {
      padding-left: 2rem;
    }
  }

  @media (max-width: 480px) {
    .timeline__list::before {
      left: 0.5rem;
    }

    .timeline__item {
      padding-left: 1.6rem;
    }

    .timeline-card {
      padding: 1.15rem 1.2rem;
    }

    .timeline-card__header {
      align-items: flex-start;
    }
  }

  @media (max-width: 560px) {
    .timeline__header {
      text-align: left;
      margin-inline: 0;
    }
  }
</style>
